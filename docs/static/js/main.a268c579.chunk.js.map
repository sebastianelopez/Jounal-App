{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PublicRoute.js","components/routers/PrivateRoute.js","components/routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","date","noteDate","moment","className","format","style","display","onChange","e","files","title","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","error","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","logOut","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","docRef","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isLoggedIn","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"8OAaEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,6CAKT,IAAMC,EAAGR,IAASS,YAEZC,EAAqB,IAAIV,IAASW,KAAKC,mB,uBCflCC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAEGP,EAAGQ,WAAH,UAAiBF,EAAjB,mBAAsCG,MAFzC,cAEfC,EAFe,OAIfC,EAAO,GAEbD,EAAUE,SAAQ,SAAAC,GACdF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YATC,kBAadL,GAbc,2CAAH,sDCFTM,EACH,eADGA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,0BAXJA,EAYE,qBAZFA,EAaK,uBAbLA,EAeI,sBAfJA,EAgBY,0B,iBCdZC,EAAU,uCAAG,WAAOC,GAAP,mBAAAZ,EAAA,4DAEL,oDAEXa,EAAW,IAAIC,UAEZC,OAAO,gBAAgB,iBAChCF,EAASE,OAAO,OAAOH,GAPD,kBAUAI,MARL,mDAQoB,CAC7BC,OAAQ,OACRC,KAAML,IAZQ,YAUZM,EAVY,QAeTC,GAfS,kCAgBSD,EAAKE,OAhBd,eAgBRC,EAhBQ,yBAiBPA,EAAUC,YAjBH,yBAmBFJ,EAAKE,OAnBH,oJAAH,sDCqBVG,EAAa,SAAChB,EAAIiB,GAAL,MAAc,CACpCC,KAAMhB,EACNiB,QAAQ,aACJnB,MACGiB,KAIEG,EAAa,SAACpB,EAAIiB,GAAL,MAAc,CACpCC,KAAMhB,EACNiB,QAAQ,aACJnB,MACGiB,KAIEI,EAAkB,SAAC9B,GAC5B,8CAAO,WAAM+B,GAAN,eAAA9B,EAAA,sEACiBF,EAAUC,GAD3B,OACGK,EADH,OAEH0B,EAASC,EAAS3B,IAFf,2CAAP,uDAOS2B,EAAS,SAAC3B,GAAD,MAAU,CAC5BsB,KAAMhB,EACNiB,QAASvB,IAIA4B,EAAiB,SAACP,GAC3B,8CAAO,WAAMK,EAASG,GAAf,iBAAAjC,EAAA,6DACGD,EAAMkC,IAAWrC,KAAKG,IAExB0B,EAAKS,YACET,EAAKS,WAGVC,EAPH,eAOyBV,IACLjB,GARpB,SAUGf,EAAG2C,IAAH,UAAUrC,EAAV,0BAA+B0B,EAAKjB,KAAM6B,OAAOF,GAVpD,OAYHL,EAASQ,EAAYb,EAAKjB,GAAI2B,IAE9BI,IAAKC,KAAK,YAAa,GAAI,WAdxB,2CAAP,yDAkBSF,EAAY,SAAC9B,EAAIiB,GAAL,MAAa,CAClCC,KAAMhB,EACNiB,QAAS,CACLnB,KACAiB,KAAK,aACDjB,MACGiB,MAyCFgB,EAAa,SAACjC,GAAD,MAAO,CAC7BkB,KAAMhB,EACNiB,QAASnB,I,QCtHAkC,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC1BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,I,iBCb3BM,G,MAAc,WAEvB,IAAMvB,EAASwB,cAIRC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAArCmD,OANsB,EAOVb,EAAQa,GACpBG,EARsB,oBAQtBA,KAEDC,EAAUC,IAAOF,GAkBvB,OACI,sBAAKG,UAAU,gBAAf,UACI,+BAAOF,EAASG,OAAO,sBAEvB,uBACItD,GAAG,eACHkB,KAAK,OACLqC,MAAO,CAACC,QAAQ,QAChBC,SAhBW,SAACC,GACpB,IAAMtD,EAAOsD,EAAEhB,OAAOiB,MAAM,GAEzBvD,GACCkB,EFoDkB,SAAClB,GAC3B,8CAAO,WAAOkB,EAAUG,GAAjB,iBAAAjC,EAAA,6DACWwB,EAAcS,IAAW7B,MAAhCmD,OAEPhB,IAAKC,KAAK,CACN4B,MAAO,cACPC,KAAM,sBACNC,mBAAmB,EACnBC,aAAc,WACVhC,IAAKiC,iBARV,SAamB7D,EAAWC,GAb9B,OAaG6D,EAbH,OAeHjD,EAAWU,IAAIuC,EAEf3C,EAASE,EAAeR,IAExBe,IAAKmC,QAnBF,2CAAP,wDErDiBC,CAAe/D,OAexB,gCACI,wBACIiD,UAAU,MACVe,QA1BY,WACxBC,SAASC,cAAc,iBAAiBC,SAuBhC,oBAMA,wBACIlB,UAAU,MACVe,QApCG,WACf9C,EAASE,EAAeuB,KAiChB,6BChDHyB,EAAa,WAEtB,IAAMlD,EAAUwB,cAEF7B,EAAQ+B,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAA1CmD,OAJqB,EAMeb,EAAQjB,GANvB,mBAMrBwD,EANqB,KAMVhC,EANU,KAMQF,EANR,KAQrB7B,EAAsB+D,EAAtB/D,KAAMkD,EAAgBa,EAAhBb,MAAMlC,EAAU+C,EAAV/C,IAAI1B,EAAMyE,EAANzE,GAEjB0E,EAAUC,iBAAO1D,EAAKjB,IAE5B4E,qBAAU,WAEF3D,EAAKjB,KAAO0E,EAASG,UACrBtC,EAAMtB,GACNyD,EAASG,QAAQ5D,EAAKjB,MAG3B,CAACiB,EAAMsB,IAEVqC,qBAAU,WAENtD,EAASN,EAAWyD,EAAWzE,GAAZ,eAAmByE,OAEvC,CAACA,EAAYnD,IAOhB,OACI,sBAAK+B,UAAU,sBAAf,UACI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UACI,uBACInC,KAAK,OACL4D,YAAY,eACZzB,UAAU,sBACV0B,aAAa,MACbpC,KAAK,QACLC,MAAOgB,EACPH,SAAUhB,IAGd,0BACIqC,YAAY,oBACZzB,UAAU,kBACVT,MAAOlC,EACPiC,KAAK,OACLc,SAAUhB,IAGTxB,EAAKS,KACN,qBAAK2B,UAAU,eAAf,SACI,qBACI2B,IAAKtD,EACLuD,IAAI,gBAMpB,wBACQ5B,UAAU,kBACVe,QAvCK,WACjB9C,EHyEqB,SAACtB,GAC1B,8CAAO,WAAMsB,EAASG,GAAf,eAAAjC,EAAA,6DAEGD,EAAIkC,IAAWrC,KAAKG,IAFvB,SAIGN,EAAG2C,IAAH,UAAUrC,EAAV,0BAA+BS,IAAMkF,SAJxC,OAMH5D,EAASW,EAAWjC,IANjB,2CAAP,wDG1EamF,CAAcnF,KAoCnB,0BCrECoF,EAAkB,WAC3B,OACI,sBAAK/B,UAAU,wBAAf,UACI,gDAEI,uBAFJ,+BAKA,mBAAGA,UAAU,+BCPZgC,EAAW,SAACC,GAAD,MAAU,CAC9BpE,KAAMhB,EACNiB,QAASmE,IAWAC,EAAgB,iBAAK,CAC9BrE,KAAMhB,ICIGsF,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAACpE,GACJA,EDXyB,CAC7BJ,KAAMhB,ICWFzB,IAASW,OAAOuG,2BAA2BF,EAAMC,GAChDE,MAAK,YAAW,IAATC,EAAQ,EAARA,KACJvE,EAASwE,EAAMD,EAAKtG,IAAIsG,EAAKE,cAC7BzE,EAASiE,QACVS,OAAM,SAAAtC,GACLuC,QAAQC,IAAIxC,GACZpC,EAASiE,KACTxD,IAAKC,KAAK,QAAQ,+CAA4C,cAkB7D8D,EAAQ,SAACvG,EAAKwG,GAAN,MAAuB,CAEpC7E,KAAMhB,EACNiB,QAAQ,CACJ5B,MACAwG,iBAcCI,EAAS,iBAAO,CAEzBjF,KAAMhB,IChEGkG,EAAe,SAAC,GAAiC,IAAhCpG,EAA+B,EAA/BA,GAAIkD,EAA2B,EAA3BA,KAAMU,EAAqB,EAArBA,MAAOlD,EAAc,EAAdA,KAAKgB,EAAS,EAATA,IAE1CJ,EAASwB,cAETK,EAAUC,IAAOF,GAQvB,OACI,sBACAG,UAAU,mEACVe,QAToB,WACpB9C,EAASN,EAAWhB,EAAG,CACnBkD,OAAMU,QAAOlD,OAAMgB,UAKvB,UAKQA,GACA,qBAAK2B,UAAU,yBACXE,MAAO,CACH8C,eAAgB,QAChBC,gBAAgB,OAAD,OAAS5E,EAAT,QAI3B,sBAAK2B,UAAU,sBAAf,UACQ,mBAAGA,UAAU,wBAAb,SACKO,IAEL,mBAAGP,UAAU,yBAAb,SACK3C,OAIb,sBAAK2C,UAAU,0BAAf,UACI,+BAAOF,EAASG,OAAO,UACvB,6BAAKH,EAASG,OAAO,cCvCxBiD,GAAiB,WAAO,IAE1B3G,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAApCA,MAEP,OACI,qBAAKyD,UAAU,mBAAf,SAEQzD,EAAM4G,KAAI,SAAAvF,GAAI,OACX,cAAC,EAAD,eAEKA,GADCA,EAAKjB,UCPjByG,GAAU,WAEnB,IAAMnF,EAAWwB,cAEVH,EAAQK,aAAY,SAAAC,GAAK,OAAIA,EAAM7D,QAAnCuD,KAUP,OACI,wBAAOU,UAAU,mBAAjB,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,cAAb,eACA,sCAASV,QAEb,wBACIU,UAAU,MACVe,QAjBK,WACjB9C,EH+CJ,uCAAO,WAAMA,GAAN,SAAA9B,EAAA,sEACEf,IAASW,OAAOsH,UADlB,OAGJpF,EAAS6E,KACT7E,EN4DuB,CAC1BJ,KAAMhB,IMjEC,2CAAP,wDGjCY,sBAOJ,sBACImD,UAAU,qBACVe,QApBU,WAClB9C,ETVJ,uCAAO,WAAMA,EAAUG,GAAhB,mBAAAjC,EAAA,6DACGD,EAAMkC,IAAWrC,KAAKG,IAEtBoH,EAAS,CACX/C,MAAO,GACPlD,KAAM,GACNwC,MAAM,IAAI0D,MAAOC,WANlB,SASkB5H,EAAGQ,WAAH,UAAiBF,EAAjB,mBAAsCuH,IAAIH,GAT5D,OASGI,EATH,OAWHzF,EAASN,EAAW+F,EAAO/G,GAAG2G,IAC9BrF,EAASF,EAAW2F,EAAO/G,GAAG2G,IAZ3B,2CAAP,0DS2BQ,UAII,mBAAGtD,UAAU,+BACb,mBAAGA,UAAU,OAAb,8BAEJ,cAAC,GAAD,QCnCC2D,GAAgB,WAAO,IAEzBjE,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAArCmD,OAEP,OACI,sBAAKM,UAAU,0EAAf,UACI,cAAC,GAAD,IAEA,+BAGSN,EACG,cAAC,EAAD,IACD,cAAC,EAAD,UCbVkE,GAAc,WAEvB,IAAM3F,EAAWwB,cACVoE,EAAWlE,aAAY,SAAAC,GAAK,OAAEA,EAAMkE,MAApCD,QAHsB,EAKQhF,EAAQ,CACzCuD,MAAO,GACPC,SAAU,KAPe,mBAKtBjB,EALsB,KAKXhC,EALW,KAUtBgD,EAAmBhB,EAAnBgB,MAAOC,EAAYjB,EAAZiB,SAWd,OACI,qCACI,oBAAIrC,UAAU,eAAd,mBAEA,uBACI+D,SAdQ,SAAC1D,GACjBA,EAAE2D,iBACF/F,EAASkE,EAAwBC,EAAMC,KAa/BrC,UAAU,oDAFd,UAII,uBACIA,UAAU,cACVnC,KAAK,OACL4D,YAAY,QACZnC,KAAK,QACLoC,aAAa,MACbnC,MAAO6C,EACPhC,SAAUhB,IAEd,uBACIY,UAAU,cACVnC,KAAK,WACL4D,YAAY,gBACZnC,KAAK,WACLoC,aAAa,MACbnC,MAAO8C,EACPjC,SAAUhB,IAGd,wBACIY,UAAU,4BACVnC,KAAK,SACLoG,SAAUJ,EAHd,sBAQA,sBAAK7D,UAAU,wBAAf,UACI,+DAEA,sBACIA,UAAU,aACVe,QA5CM,WACtB9C,GLeG,SAACA,GACJ7C,IAASW,OAAOmI,gBAAgBpI,GAC/ByG,MAAK,YAAW,IAATC,EAAQ,EAARA,KACJvE,EACIwE,EAAMD,EAAKtG,IAAIsG,EAAKE,qBKsBhB,UAII,qBAAK1C,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAc2B,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAG5B,UAAU,WAAb,SACI,4DAMZ,cAAC,IAAD,CAAMmE,GAAG,iBACHnE,UAAU,OADhB,6C,oBCvEHoE,GAAiB,WAG1B,IAAMnG,EAAWwB,cACV4E,EAAY1E,aAAY,SAAAC,GAAK,OAAEA,EAAMkE,MAArCO,SAJyB,EAOKxF,EAAQ,CACzCS,KAAM,SACN8C,MAAO,mBACPC,SAAU,SACViC,UAAW,WAXiB,mBAOzBlD,EAPyB,KAOdhC,EAPc,KAczBE,EAAmC8B,EAAnC9B,KAAM8C,EAA6BhB,EAA7BgB,MAAOC,EAAsBjB,EAAtBiB,SAASiC,EAAalD,EAAbkD,UAWvBC,EAAc,WAEhB,OAAwB,IAArBjF,EAAKkF,OAAOC,QACXxG,EAAS+D,EAAS,sBACX,GACD0C,KAAUC,QAAQvC,GAGnBC,IAAWiC,GAChBrG,EAAS+D,EAAS,oCACX,IAEP/D,EPrCoB,CAC5BJ,KAAMhB,KOqCS,IAPPoB,EAAS+D,EAAS,wBACX,IAYf,OACI,qCACI,oBAAIhC,UAAU,eAAd,wBAEA,uBACI+D,SAjCW,SAAC1D,GACpBA,EAAE2D,iBAECO,GAAY,IACXtG,ENtBsC,SAACmE,EAAMC,EAAS/C,GAC9D,OAAM,SAACrB,GACH7C,IAASW,OAAO6I,+BAA+BxC,EAAMC,GACpDE,KADD,uCACM,6BAAApG,EAAA,6DAAOqG,EAAP,EAAOA,KAAP,SACIA,EAAKqC,cAAc,CAACnC,YAAYpD,IADpC,OAGFrB,EACIwE,EAAMD,EAAKtG,IAAIsG,EAAKE,cAJtB,2CADN,uDAOGC,OAAM,SAAAtC,GACLuC,QAAQC,IAAIxC,GACZ3B,IAAKC,KAAK,QAAQ,6EAA6E,aMWtFmG,CAAmC1C,EAAOC,EAAS/C,KA8BxDU,UAAU,oDAFd,UAKQqE,GACA,qBAAKrE,UAAU,oBAAf,SAEQqE,IAIZ,uBACIrE,UAAU,cACVnC,KAAK,OACL4D,YAAY,SACZnC,KAAK,OACLoC,aAAa,MACbnC,MAAOD,EACPc,SAAUhB,IAEd,uBACIY,UAAU,cACVnC,KAAK,OACL4D,YAAY,QACZnC,KAAK,QACLoC,aAAa,MACbnC,MAAO6C,EACPhC,SAAUhB,IAEd,uBACIY,UAAU,cACVnC,KAAK,WACL4D,YAAY,wBACZnC,KAAK,WACLoC,aAAa,MACbnC,MAAO8C,EACPjC,SAAUhB,IAEd,uBACIY,UAAU,cACVnC,KAAK,WACL4D,YAAY,yBACZnC,KAAK,YACLoC,aAAa,MACbnC,MAAO+E,EACPlE,SAAUhB,IAGd,wBACIY,UAAU,iCACVnC,KAAK,SAFT,wBASA,cAAC,IAAD,CAAMsG,GAAG,cACHnE,UAAU,OADhB,6CCzGH+E,GAAa,WACtB,OACI,mCAEI,qBAAK/E,UAAU,aAAf,SACG,qBAAKA,UAAU,sBAAf,SACK,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,cAAcC,UAAWtB,KAC3C,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,iBAAiBC,UAAWd,KAE9C,cAAC,IAAD,CAAUD,GAAG,0B,SCfxBgB,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,WACWC,EAET,EAFFH,UACGI,EACD,2CAEF,OACI,cAAC,IAAD,2BACQA,GADR,IAEIJ,UAAY,SAACK,GAAD,OACNH,EAEI,cAAC,IAAD,CAAUjB,GAAG,MADb,cAACkB,EAAD,eAAeE,SCXxBC,GAAe,SAAC,GAItB,IAHHJ,EAGE,EAHFA,WACWC,EAET,EAFFH,UACGI,EACD,2CAGF,OACI,cAAC,IAAD,2BACQA,GADR,IAEIJ,UAAY,SAACK,GAAD,OACPH,EACK,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAUpB,GAAG,sBCFtBsB,GAAY,WAErB,IAAMxH,EAAUwB,cAFW,EAIKV,oBAAS,GAJd,mBAIpB2G,EAJoB,KAIVC,EAJU,OAMS5G,oBAAS,GANlB,mBAMpBqG,EANoB,KAMRQ,EANQ,KAyB3B,OAjBArE,qBAAU,WACNnG,IAASW,OAAO8J,mBAAhB,uCAAmC,WAAOrD,GAAP,SAAArG,EAAA,uDAE/B,OAAGqG,QAAH,IAAGA,OAAH,EAAGA,EAAMtG,MACL+B,EAASwE,EAAMD,EAAKtG,IAAKsG,EAAKE,cAC9BkD,GAAc,GAGd3H,EAASD,EAAkBwE,EAAKtG,OAEhC0J,GAAc,GAElBD,GAAY,GAXmB,2CAAnC,yDAcD,CAAC1H,EAAS0H,EAAYC,IAEtBF,EAEK,2CAKJ,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIT,KAAK,QACLC,UAAWH,GACXK,WAAYA,IAGhB,cAAC,GAAD,CACIJ,OAAK,EAACC,KAAK,IACXC,UAAWvB,GACXyB,WAAYA,IAGhB,cAAC,IAAD,CAAUjB,GAAG,wB,kBC5D3BrF,GAAa,CACf+E,SAAS,EACTQ,SAAU,M,SCFRvF,GAAa,CACfvC,MAAM,GACNmD,OAAO,MCELoG,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7BpK,KCNuB,WAAsB,IAArB6D,EAAoB,uDAAd,GAAGwG,EAAW,uCAE5C,OAAQA,EAAOvI,MACX,KAAKhB,EACD,MAAM,CACFX,IAAIkK,EAAOtI,QAAQ5B,IACnBoD,KAAK8G,EAAOtI,QAAQ4E,aAG5B,KAAK7F,EAEG,MAAO,GAEf,QACI,OAAO+C,IDPfkE,GFFqB,WAA8B,IAA7BlE,EAA4B,uDAAtBd,GAAasH,EAAS,uCAClD,OAAQA,EAAOvI,MACX,KAAKhB,EACG,kCACO+C,GADP,IAEIyE,SAAS+B,EAAOtI,UAE5B,KAAKjB,EACO,kCACO+C,GADP,IAEAyE,SAAS,OAErB,KAAKxH,EACO,kCACW+C,GADX,IAEIiE,SAAQ,IAExB,KAAKhH,EACO,kCACW+C,GADX,IAEIiE,SAAQ,IAGxB,QACI,OAAOjE,IErBfrD,MDJwB,WAA8B,IAA7BqD,EAA4B,uDAAtBd,GAAasH,EAAS,uCAErD,OAAQA,EAAOvI,MAEX,KAAKhB,EACD,kCACO+C,GADP,IAEIF,OAAO,eACA0G,EAAOtI,WAItB,KAAKjB,EACD,kCACW+C,GADX,IAEQhC,KAAK,CAACwI,EAAOtI,SAAT,oBAAqB8B,EAAMrD,UAG3C,KAAKM,EACD,kCACO+C,GADP,IAEIrD,MAAM,aAAI6J,EAAOtI,WAGzB,KAAKjB,EACD,kCACO+C,GADP,IAEIrD,MAAMqD,EAAMrD,MAAM4G,KACd,SAAAvF,GAAI,OAAIA,EAAKjB,KAAOyJ,EAAOtI,QAAQnB,GAC/ByJ,EAAOtI,QAAQF,KACjBA,OAId,KAAKf,EACD,kCACO+C,GADP,IAEIF,OAAQ,KACRnD,MAAMqD,EAAMrD,MAAM8J,QAAQ,SAAAzI,GAAI,OAAIA,EAAKjB,KAAOyJ,EAAOtI,aAG7D,KAAKjB,EACD,kCACO+C,GADP,IAEQF,OAAQ,KACRnD,MAAO,KAGnB,QACI,OAAOqD,MC1CN0G,GAAOC,aAChBL,GACAJ,GACIU,aAAgBC,QEXXC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCHZK,IAASC,OAEL,cAAC,GAAD,IAEF5F,SAAS6F,eAAe,W","file":"static/js/main.a268c579.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCaQgaksStNk181pTlMJQER4k7bwav6Cog\",\r\n    authDomain: \"journal-app-12760.firebaseapp.com\",\r\n    projectId: \"journal-app-12760\",\r\n    storageBucket: \"journal-app-12760.appspot.com\",\r\n    messagingSenderId: \"63704710462\",\r\n    appId: \"1:63704710462:web:73710bd5a03f128ffac06f\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db=firebase.firestore();\r\n\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","import {db} from '../firebase/firebase-config';\r\n\r\nexport const loadNotes = async (uid)=>{\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes= [];\r\n\r\n    notesSnap.forEach(snapHijo=>{\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n}","export const types = {\r\n    login:'[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set active Note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated Note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesRemove: '[Notes] Remove Note',\r\n    notesLogOutCleaning: '[Notes] Logout Cleaning'\r\n}","\r\n\r\nexport const fileUpload = async (file)=>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/ddkrzcc2w/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try{\r\n        const resp= await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok){\r\n            const cloudResp= await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    }   catch(err){\r\n        throw err;\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types} from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const starNewNote = ()=>{\r\n    return async(dispatch, getState)=>{\r\n        const uid = getState().auth.uid;\r\n\r\n        const newNote ={\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(docRef.id,newNote));\r\n        dispatch(addNewNote(docRef.id,newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) =>({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) =>({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes=(uid)=>{\r\n    return async(dispatch)=>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n    \r\n};\r\n\r\nexport const setNotes=(notes)=>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n    \r\n});\r\n\r\nexport const startSaveNotes = (note)=>{\r\n    return async(dispatch,getState)=>{\r\n        const uid = getState().auth.uid;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n\r\n        Swal.fire('Guardado!', '', 'success');\r\n    }\r\n};\r\n\r\nexport const refreshNote=(id, note)=>({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nexport const startUploading = (file)=>{\r\n    return async (dispatch, getState)=>{\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Subiendo...',\r\n            text: 'Por favor espere...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        activeNote.url=fileUrl;\r\n\r\n        dispatch(startSaveNotes(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n    return async(dispatch,getState)=>{\r\n        \r\n        const uid=getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id)=>({\r\n    type: types.notesRemove,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout= ()=>({\r\n    type: types.notesLogOutCleaning\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNotes, startUploading } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch=useDispatch();\r\n\r\n    \r\n\r\n    const {active} = useSelector(state => state.notes);\r\n    const [formValues]=useForm(active);\r\n    const {date} = formValues;\r\n\r\n    const noteDate= moment(date);\r\n\r\n    const handleSave = ()=>{\r\n        dispatch(startSaveNotes(active));\r\n    }\r\n\r\n    const handlePictureUpload = ()=>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange=(e)=>{\r\n        const file = e.target.files[0];\r\n\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span>{noteDate.format('dddd D MMMM YYYY')}</span>\r\n\r\n            <input\r\n                id='fileSelector'\r\n                type=\"file\"\r\n                style={{display:'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureUpload}\r\n                >\r\n                    Imagen\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}    \r\n                >\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch =useDispatch();\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n\r\n    const [formValues,handleInputChange,reset]=useForm(note);\r\n\r\n    const {body, title,url,id} = formValues;\r\n\r\n    const activeId= useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        \r\n        if (note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current=note.id;\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id,{...formValues}));\r\n\r\n    }, [formValues, dispatch])\r\n\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className='notes__main-content'>\r\n            <NotesAppBar />\r\n\r\n            <div className='notes__content'>\r\n                <input \r\n                    type='text'\r\n                    placeholder='Algun titulo'\r\n                    className='notes__tittle-input'\r\n                    autoComplete='off'\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                \r\n                <textarea\r\n                    placeholder='¿Que paso hoy?'\r\n                    className='notes__textarea'\r\n                    value={body}\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    (note.url) &&\r\n                    <div className='notes__image'>\r\n                        <img \r\n                            src={url}\r\n                            alt='imagen'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                    className='btn btn-borrado'   \r\n                    onClick={handleDelete}                 \r\n             >\r\n                Eliminar\r\n            </button>                \r\n                \r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='journal__main-nothing'>\r\n            <p>\r\n                Selecciona algo\r\n                <br/>\r\n                o crea una nueva entrada!                \r\n            </p>\r\n            <i className='far fa-star fa-4x mt-5'></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (error)=>({\r\n    type: types.uiSetError,\r\n    payload: error\r\n});\r\n\r\nexport const removeError = ()=>({\r\n    type: types.uiRemoveError    \r\n});\r\n\r\nexport const startLoading = ()=>({\r\n    type: types.uiStartLoading    \r\n});\r\n\r\nexport const finishLoading = ()=>({\r\n    type: types.uiFinishLoading   \r\n});\r\n\r\n","import { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startRegisterWithEmailPasswordName = (email,password,name)=>{\r\n    return(dispatch)=>{\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then(async({user})=>{\r\n            await user.updateProfile({displayName:name});\r\n\r\n            dispatch(\r\n                login(user.uid,user.displayName)\r\n            )\r\n        }).catch(e=>{\r\n            console.log(e);\r\n            Swal.fire('Error','Alguno de los datos ingresados es invalido o el usuario ya ha sido creado.','error');\r\n        });\r\n    }\r\n}\r\nexport const startLoginEmailPassword = (email, password) =>{\r\n    return (dispatch)=>{\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(({user})=>{\r\n            dispatch(login(user.uid,user.displayName));\r\n            dispatch(finishLoading());\r\n        }).catch(e=>{\r\n            console.log(e);\r\n            dispatch(finishLoading());\r\n            Swal.fire('Error','El usuario o la contraseña es incorrecta.','error');\r\n        });\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch)=>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user})=>{\r\n            dispatch(\r\n                login(user.uid,user.displayName)\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    \r\n        type: types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n        }\r\n})\r\n\r\n\r\nexport const startLogOut = () =>{\r\n    return async(dispatch)=>{\r\n       await firebase.auth().signOut();\r\n\r\n       dispatch(logOut());\r\n       dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logOut = () => ({\r\n    \r\n    type: types.logout,    \r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({id, date, title, body,url}) => {\r\n\r\n    const dispatch=useDispatch();\r\n\r\n    const noteDate= moment(date)\r\n\r\n    const handleEntryClick= ()=>{\r\n        dispatch(activeNote(id,{\r\n            date, title, body, url\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div \r\n        className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n        onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: \"cover\",\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n            <div className='journal__entry-body'>\r\n                    <p className=\"journal__entry-tittle\">\r\n                        {title}\r\n                    </p>\r\n                    <p className=\"journal__entry-content\">\r\n                        {body}\r\n                    </p>\r\n            </div>\r\n            \r\n            <div className='journal__entry-date-box'>\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note=>(\r\n                   <JournalEntry \r\n                    key={note.id}\r\n                    {...note} \r\n                   /> \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth';\r\nimport { starNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogOut = ()=>{\r\n        dispatch(startLogOut());\r\n    }\r\n\r\n    const handleAddNote = ()=>{\r\n        dispatch(starNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\"> \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-flag\"> </i>\r\n                    <span>  {name}</span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogOut}\r\n                >\r\n                    Salir\r\n                </button>\r\n            </div>\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNote}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">Nueva entrada</p>                \r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                    ? ( <NoteScreen />)\r\n                    : (<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state=>state.ui);\r\n\r\n    const [formValues,handleInputChange]=useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password));\r\n    }\r\n\r\n    const handleGoogleLogin = ()=>{        \r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__tittle'>Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete='off'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type='password'\r\n                    placeholder='Contraseña'\r\n                    name='password'\r\n                    autoComplete='off'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-primary btn-block' \r\n                    type='submit'\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresa con tus redes sociales</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <Link to='/auth/register'\r\n                      className='link'\r\n                >\r\n                    Crearse una nueva cuenta\r\n                </Link>\r\n\r\n                \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state=>state.ui);\r\n    \r\n\r\n    const [formValues,handleInputChange]=useForm({\r\n        name: 'Carlos',        \r\n        email: 'carlos@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password,password2} = formValues;\r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault(); \r\n        \r\n        if(isFormValid(true)){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password,name));\r\n        }\r\n        \r\n    }\r\n\r\n    const isFormValid = ()=>{\r\n\r\n        if(name.trim().length===0){\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        }else if(password!==password2){\r\n            dispatch(setError('La contraseñas no coinciden'));\r\n            return false;\r\n        }else{\r\n            dispatch(removeError());\r\n            return true;\r\n        }      \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__tittle'>Registrate</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n                {\r\n                    msgError &&\r\n                    <div className='auth__alert-error'>\r\n                        {\r\n                            msgError\r\n                        }\r\n                    </div>\r\n                }\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type='text'\r\n                    placeholder='Nombre'\r\n                    name='name'\r\n                    autoComplete='off'\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete='off'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type='password'\r\n                    placeholder='Ingrese contraseña'\r\n                    name='password'\r\n                    autoComplete='off'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type='password'\r\n                    placeholder='Confirme contraseña'\r\n                    name='password2'\r\n                    autoComplete='off'\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-primary btn-block mb-5' \r\n                    type='submit'\r\n                >\r\n                    Registrate\r\n                </button>\r\n                \r\n                \r\n\r\n                <Link to='/auth/login'\r\n                      className='link'\r\n                >\r\n                    ¿Ya estas registrado?\r\n                </Link>\r\n\r\n                \r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {    \r\n    Switch,\r\n    Route,\r\n    Redirect    \r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"auth__main\">\r\n               <div className=\"auth__box-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                        <Route exact path=\"/auth/register\" component={RegisterScreen} />                    \r\n\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n               </div>\r\n                 \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest //resto de los argumentos\r\n}) => {\r\n    \r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (!isLoggedIn)\r\n                    ? <Component {...props} />  // Si no esta autenticado el usuario renderiza el componente\r\n                    : <Redirect to=\"/\" />  // Si no lo esta, te envia al login\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes= {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest //resto de los argumentos\r\n}) => {\r\n    \r\n    \r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                    ? <Component {...props} />  // Si esta autenticado el usuario renderiza el componente\r\n                    : <Redirect to=\"./auth/login\" />  // Si no lo esta, te envia al login\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes= {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {firebase} from '../../firebase/firebase-config';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,    \r\n    Redirect    \r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport {  startLoadingNotes } from '../../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch =useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user)=>{\r\n\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                \r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false); \r\n                       \r\n        })\r\n    }, [dispatch,setChecking,setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return(\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div> \r\n                <Switch>\r\n                    <PublicRoute \r\n                        path='/auth' \r\n                        component={AuthRouter}\r\n                        isLoggedIn={isLoggedIn}                            \r\n                    />\r\n                        \r\n                    <PrivateRoute \r\n                        exact path='/' \r\n                        component={JournalScreen}\r\n                        isLoggedIn={isLoggedIn}                            \r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n             </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n                return{\r\n                    ...state,\r\n                    msgError:action.payload,\r\n                }\r\n        case types.uiRemoveError:\r\n                    return{\r\n                        ...state,\r\n                    msgError:null,\r\n                    }\r\n        case types.uiStartLoading:\r\n                    return{\r\n                            ...state,\r\n                        loading:true,\r\n                    }\r\n        case types.uiFinishLoading:\r\n                    return{\r\n                            ...state,\r\n                        loading:false,\r\n                    }                \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    notes:[],\r\n    active:null\r\n}\r\n\r\nexport const notesReducer = (state=initialState,action)=>{\r\n\r\n    switch (action.type) {        \r\n                    \r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                    ...state,\r\n                    note:[action.payload, ...state.notes]\r\n                }    \r\n        \r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes:[...action.payload]                \r\n            }    \r\n\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes:state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                    ?   action.payload.note\r\n                    : note\r\n                )            \r\n            } \r\n        \r\n        case types.notesRemove:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes:state.notes.filter( note => note.id !== action.payload)           \r\n            }\r\n            \r\n        case types.notesLogOutCleaning:\r\n            return{\r\n                ...state,\r\n                    active: null,\r\n                    notes: []         \r\n                } \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store= createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state={},action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid:action.payload.uid,\r\n                name:action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            \r\n                return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './components/routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}> \r\n            <AppRouter />\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n\r\n\r\n/*El Provider provee informacion a toda la aplicacion, en este caso el store */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  \n    <JournalApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}